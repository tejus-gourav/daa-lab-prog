#include <stdio.h>

// Function to merge two subarrays of arr[]
void merge(int arr[], int left, int middle, int right) {
    int i = left, j = middle + 1, k = left; // Step 1

    int temp[right + 1]; // Step 2

    while (i <= middle && j <= right) { // Step 3
        if (arr[i] <= arr[j]) {
            temp[k] = arr[i]; // Step 3.1
            i++;
        } else {
            temp[k] = arr[j]; // Step 3.2
            j++;
        }
        k++;
    }

    while (i <= middle) { // Step 4
        temp[k] = arr[i];
        i++;
        k++;
    }

    while (j <= right) { // Step 5
        temp[k] = arr[j];
        j++;
        k++;
    }

    for (int p = left; p <= right; p++) // Step 6
        arr[p] = temp[p];
}

// Merge sort function
void mergeSort(int arr[], int left, int right) {
    if (left < right) {
        int middle = left + (right - left) / 2;

        mergeSort(arr, left, middle);
        mergeSort(arr, middle + 1, right);

        merge(arr, left, middle, right);
    }
}

int main() {
    int arr[] = {12, 11, 13, 5, 6, 7};
    int arr_size = sizeof(arr) / sizeof(arr[0]);

    printf("Original array: ");
    for (int i = 0; i < arr_size; i++)
        printf("%d ", arr[i]);
    printf("\n");

    mergeSort(arr, 0, arr_size - 1);

    printf("Sorted array: ");
    for (int i = 0; i < arr_size; i++)
        printf("%d ", arr[i]);
    printf ("\n");

    return 0;
}
